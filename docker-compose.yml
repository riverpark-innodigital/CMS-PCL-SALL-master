

services:
  postgreSql:
    restart: always
    platform: linux/x86_64
    image: postgres:latest
    ports:
      - 5432:5432
    volumes:
      - .docker/postgreSql:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=root
      - POSTGRES_USER=root
      - POSTGRES_DB=templete
    networks:
      - server
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    restart: always
    platform: linux/x86_64
    build:
      context: ./frontend
      dockerfile: ${DOCKERFILE:-Dockerfile.dev}
    ports:
      - '5173:5173'
    command: npm run dev
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    volumes:
      - ./frontend/:/app
      - /app/node_modules
    networks:
      - server
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
      - NODE_ENV=${NODE_ENV:-development}

  backend:
    restart: always
    platform: linux/x86_64
    build:
      context: ./backend
      dockerfile: ${DOCKERFILE:-Dockerfile.dev}
    ports:
      - '3000:3000'
    command: npm run dev
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    volumes:
      - ./backend/:/app
      - /app/node_modules
    environment:
      # - REDIS_HOST=redis
      # - REDIS_PORT=6379
      # - SECRET_JWT=awgwagawgawgawgawgawg
      # - API_DOC_URL=http://localhost:3000
      # - PORT=3000
      # # - DATABASE_URL=postgresql://pclsmartsale:G8k01LY7u57IjC8O5AIpFE6be7dYkm39@dpg-ct2tkv5svqrc738glu5g-a.singapore-postgres.render.com/pclsmartsale
      # - DATABASE_URL=postgresql://technexify:nexify@2547@167.172.65.254/pclsmartsale_test
      # - SHADOW_DATABASE_URL=postgresql://technexify:nexify@2547@167.172.65.254/pclsmartsale_test
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    networks:
      - server
    depends_on:
      postgreSql:
        condition: service_healthy

networks:
  server:
    driver: bridge
