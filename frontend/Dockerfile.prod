# Stage 1: Build the React Application
FROM node:20-alpine as build
WORKDIR /app
COPY package*.json ./
RUN npm install --force
RUN rm -rf node_modules package-lock.json
RUN npm cache clean --force
RUN npm install --force
COPY . .
RUN npm run build || cat /home/root/.npm/_logs/*.log

# Stage 2: Setup the Nginx Server to serve the React Application
# FROM nginx:1.25.0-alpine as production
# COPY --from=build /app/dist /usr/share/nginx/html
# COPY nginx.conf /etc/nginx/conf.d/default.conf
# EXPOSE 80
# CMD ["nginx", "-g", "daemon off;"]

# Use an official Nginx image
FROM nginx:1.25.0-alpine
ARG VITE_API_BASE_URL
ENV VITE_API_BASE_URL=${VITE_API_BASE_URL}
ARG VITE_REDIRECT_URL
ENV VITE_REDIRECT_URL=${VITE_REDIRECT_URL}
ARG VITE_REDIRECT_IMG
ENV VITE_REDIRECT_IMG=${VITE_REDIRECT_IMG}
ARG VITE_USERMANAGE_API
ENV VITE_USERMANAGE_API=${VITE_USERMANAGE_API}

# Remove the default Nginx configuration file
RUN rm /etc/nginx/conf.d/default.conf

# Copy your custom Nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy the pre-built React app to the Nginx HTML directory
COPY --from=build /app/dist /usr/share/nginx/html

# Expose port 80
EXPOSE 80

# Start Nginx server
CMD ["nginx", "-g", "daemon off;"]